<?xml version="1.0"?>
<doc>
    <assembly>
        <name>VirtoCommerce.OrdersModule.Web</name>
    </assembly>
    <members>
        <member name="T:VirtoCommerce.OrdersModule.Web.Authorization.OnlyOrderResponsibleScope">
            <summary>
            Restrict access rights to orders where user is assigned as responsible
            </summary>
        </member>
        <member name="T:VirtoCommerce.OrdersModule.Web.Authorization.OrderSelectedStoreScope">
            <summary>
            Restricts access rights to orders that belong to a particular store
            </summary>
        </member>
        <member name="M:VirtoCommerce.OrdersModule.Web.Controllers.Api.OrderModuleController.SearchCustomerOrder(VirtoCommerce.OrdersModule.Core.Model.Search.CustomerOrderSearchCriteria)">
            <summary>
            Search customer orders by given criteria
            </summary>
            <param name="criteria">criteria</param>
        </member>
        <member name="M:VirtoCommerce.OrdersModule.Web.Controllers.Api.OrderModuleController.GetByNumber(System.String,System.String)">
            <summary>
            Find customer order by number
            </summary>
            <remarks>Return a single customer order with all nested documents or null if order was not found</remarks>
            <param name="number">customer order number</param>
            <param name="respGroup"></param>
        </member>
        <member name="M:VirtoCommerce.OrdersModule.Web.Controllers.Api.OrderModuleController.GetById(System.String,System.String)">
            <summary>
            Find customer order by id
            </summary>
            <remarks>Return a single customer order with all nested documents or null if order was not found</remarks>
            <param name="id">customer order id</param>
            <param name="respGroup"></param>
        </member>
        <member name="M:VirtoCommerce.OrdersModule.Web.Controllers.Api.OrderModuleController.CalculateTotals(VirtoCommerce.OrdersModule.Core.Model.CustomerOrder)">
            <summary>
            Calculate order totals after changes
            </summary>
            <remarks>Return order with recalculated totals</remarks>
            <param name="order">Customer order</param>
        </member>
        <member name="M:VirtoCommerce.OrdersModule.Web.Controllers.Api.OrderModuleController.ProcessOrderPaymentsWithoutBankCardInfo(System.String,System.String)">
            <summary>
            Register customer order payment in external payment system (without bankCardInfo).
            It's a workaround method, allowing to accept requests without bankCardInfo.
            </summary>
            <param name="orderId">customer order id</param>
            <param name="paymentId">payment id</param>
        </member>
        <member name="M:VirtoCommerce.OrdersModule.Web.Controllers.Api.OrderModuleController.ProcessOrderPayments(System.String,System.String,VirtoCommerce.PaymentModule.Core.Model.BankCardInfo)">
            <summary>
            Register customer order payment in external payment system
            </summary>
            <remarks>Used in storefront checkout or manual order payment registration</remarks>
            <param name="orderId">customer order id</param>
            <param name="paymentId">payment id</param>
            <param name="bankCardInfo">banking card information</param>
        </member>
        <member name="M:VirtoCommerce.OrdersModule.Web.Controllers.Api.OrderModuleController.CreateOrderFromCart(System.String)">
            <summary>
            Create new customer order based on shopping cart.
            </summary>
            <param name="cartId">shopping cart id</param>
        </member>
        <member name="M:VirtoCommerce.OrdersModule.Web.Controllers.Api.OrderModuleController.CreateOrder(VirtoCommerce.OrdersModule.Core.Model.CustomerOrder)">
            <summary>
            Add new customer order to system
            </summary>
            <param name="customerOrder">customer order</param>
        </member>
        <member name="M:VirtoCommerce.OrdersModule.Web.Controllers.Api.OrderModuleController.UpdateOrder(VirtoCommerce.OrdersModule.Core.Model.CustomerOrder)">
            <summary>
             Update a existing customer order 
            </summary>
            <param name="customerOrder">customer order</param>
        </member>
        <member name="M:VirtoCommerce.OrdersModule.Web.Controllers.Api.OrderModuleController.GetNewShipment(System.String)">
            <summary>
            Get new shipment for specified customer order
            </summary>
            <remarks>Return new shipment document with populates all required properties.</remarks>
            <param name="id">customer order id </param>
        </member>
        <member name="M:VirtoCommerce.OrdersModule.Web.Controllers.Api.OrderModuleController.GetNewPayment(System.String)">
            <summary>
            Get new payment for specified customer order
            </summary>
            <remarks>Return new payment  document with populates all required properties.</remarks>
            <param name="id">customer order id </param>
        </member>
        <member name="M:VirtoCommerce.OrdersModule.Web.Controllers.Api.OrderModuleController.DeleteOrdersByIds(System.String[])">
            <summary>
             Delete a whole customer orders
            </summary>
            <param name="ids">customer order ids for delete</param>
        </member>
        <member name="M:VirtoCommerce.OrdersModule.Web.Controllers.Api.OrderModuleController.GetDashboardStatisticsAsync(System.Nullable{System.DateTime},System.Nullable{System.DateTime})">
            <summary>
             Get a some order statistic information for Commerce manager dashboard
            </summary>
            <param name="start">start interval date</param>
            <param name="end">end interval date</param>
        </member>
        <member name="M:VirtoCommerce.OrdersModule.Web.Controllers.Api.OrderModuleController.PostProcessPayment(VirtoCommerce.OrdersModule.Web.Model.PaymentCallbackParameters)">
            <summary>
            Payment callback operation used by external payment services to inform post process payment in our system
            </summary>
            <param name="callback">payment callback parameters</param>
        </member>
        <member name="M:VirtoCommerce.OrdersModule.Web.Controllers.Api.OrderModulePaymentsController.SearchOrderPayments(VirtoCommerce.OrdersModule.Core.Model.Search.PaymentSearchCriteria)">
            <summary>
            Search  order payments by given criteria
            </summary>
            <param name="criteria">criteria</param>
        </member>
        <member name="M:VirtoCommerce.OrdersModule.Web.Controllers.Api.OrderModulePaymentsController.GetById(System.String,System.String)">
            <summary>
            Find  order payment by id
            </summary>
            <remarks>Return a single order payment with all nested documents or null if payment was not found</remarks>
            <param name="id"> order payment id</param>
            <param name="respGroup"></param>
        </member>
        <member name="M:VirtoCommerce.OrdersModule.Web.Controllers.Api.OrderModulePaymentsController.CreatePayment(VirtoCommerce.OrdersModule.Core.Model.PaymentIn)">
            <summary>
            Create or update order payment
            </summary>
            <param name="payment">payment</param>
        </member>
        <member name="M:VirtoCommerce.OrdersModule.Web.Controllers.Api.OrderModulePaymentsController.DeleteOrderPaymentsByIds(System.String[])">
            <summary>
             Delete an order payment
            </summary>
            <param name="ids">order payment ids</param>
        </member>
    </members>
</doc>
